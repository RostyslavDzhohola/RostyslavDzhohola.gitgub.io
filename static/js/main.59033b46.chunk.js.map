{"version":3,"sources":["components/AccountBalance/AccountBalance.jsx","components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","components/ExchangeHeader/logo.svg","components/ExchangeHeader/ExchangeHeader.jsx","App.js","reportWebVitals.js","index.js"],"names":["Section","styled","section","Button","button","AccountBalance","props","buttonText","showBalance","amount","toFixed","onClick","event","preventDefault","handleHide","Td","td","Coin","name","ticker","parseFloat","Number","price","balance","action","method","calculateBalance","handleRefresh","id","Table","table","CoinList","coinData","map","key","Header","header","H1","h1","Img","img","ExchangeHeader","src","logo","alt","Component","AppCss","div","App","useState","setBalance","setShowBalance","setCoinData","componentDidMount","a","axios","get","response","coinIDs","data","slice","coin","promises","Promise","all","coinPriceData","symbol","quotes","USD","useEffect","length","totalBalance","forEach","console","log","valueChangeId","tickerURL","newPrice","newCoinData","newValues","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59033b46.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Section = styled.section`\n    width: 50%;\n    font: bold;\n    font-size: 2.4rem;\n    position: absolute;\n    left: 15%;\n    text-align: left;\n    padding: 1.5 rem 0 1.5rem 5rem;\n    border-bottom: 1px solid black;\n`;\n\nconst Button = styled.button`\n    background-color: #A6FFB5;\n    font-weight: bold;\n    font-size: 1rem;\n    position: absolute;\n    margin-top: 1.5rem;\n    left: 100%;\n    -ms-transform: translateY(-50%);\n    transform: translateY(-50%);\n    align: right;\n    \n\n`;\nexport default function AccountBalance(props) {\n    const handleClick = (event) => {\n        event.preventDefault();\n        props.handleHide();     \n    }\n\n    const buttonText = props.showBalance ? 'Hide' : 'Show';\n    return (\n        <Section>\n            {props.showBalance && (<>Balance: ${(props.amount).toFixed(2)}</>)}\n            <Button onClick={handleClick}>{buttonText}</Button>\n        </Section>\n    );\n    \n}\n\n\nAccountBalance.propTypes = {\n    amount: PropTypes.number.isRequired\n }","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Td = styled.td`\n   border: 2px solid black;\n   width: 20vh;\n`\n\nexport default function Coin (props) {\n   const handleClick = (event) => {\n      event.preventDefault();\n      props.calculateBalance();\n      props.handleRefresh(props.id);    // this.props.key is the coin's id \n   }\n   \n   return (\n      <tr>\n         <Td>{props.name}</Td>\n         <Td>{props.ticker}</Td>\n         <Td>${parseFloat(Number(props.price).toFixed(3))}</Td>\n         {props.showBalance ? (<Td>{props.balance}</Td>) : (<Td>Hidden</Td>)}\n         {/* <Td>{this.props.balance}</Td> */}\n         <Td>\n            <form action=\"#\" method=\"POST\">\n               <button onClick={handleClick}>Refresh</button>\n            </form>\n         </Td>\n      </tr>\n   );\n}\n\nCoin.propTypes = {\n   name: PropTypes.string.isRequired,\n   ticker: PropTypes.string.isRequired,\n   price: PropTypes.number.isRequired \n}","import React from 'react'\nimport Coin from '../Coin/Coin';\nimport styled from 'styled-components';\n\nconst Table = styled.table`\n    margin: 50px auto 50px auto;\n    display: inline-block;\n    font-size: 1.5rem;\n`\n\nexport default function CoinList(props) {\n    return (\n        <Table>\n            <thead>\n            <tr>\n                <th>Name</th>\n                <th>Ticker</th>\n                <th>Price</th>\n                <th>Balance</th>\n                <th>Action</th>\n            </tr>\n            </thead>\n            <tbody>\n            { \n                props.coinData.map(({key, name, ticker, id, price, balance}) => \n                    <Coin   key={key} \n                            name={name} \n                            ticker={ticker}\n                            balance={balance}\n                            price={price}\n                            id={id}\n                            showBalance={props.showBalance}\n                            calculateBalance={props.calculateBalance}\n                            handleRefresh={props.handleRefresh} />\n                )\n            }\n            </tbody>\n        </Table>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\nimport logo from './logo.svg';\nimport styled from 'styled-components';\n\nconst Header = styled.header`\n    background-color: #282c34;\n    min-height: 20vh;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: flex-start;\n    color: white;\n`\nconst H1 = styled.h1`\n  font-size: 5rem;\n`\nconst Img = styled.img`\n  height: 8rem;\n  pointer-events: none;\n`\n\nexport default class ExchangeHeader extends Component {\n  render() {\n    return (\n        <Header>\n        <Img src={logo} alt=\"React logo\"/>\n         <H1>\n           Coin Exchange \n         </H1>\n       </Header>\n    )\n  }\n}\n","import AccountBalance from './components/AccountBalance/AccountBalance';\nimport styled from 'styled-components';\nimport React, { useEffect, useState } from 'react'\nimport CoinList from './components/CoinList/CoinList';\nimport ExchangeHeader from './components/ExchangeHeader/ExchangeHeader';\nimport axios from 'axios';\n\nconst AppCss = styled.div`\n  text-align: center;\n  background-color: rgb(151, 69, 201);\n  color: rgb(255, 255, 255);\n`\nconst COIN_COUNT = 10;\n\nfunction App(props)   {\n  const [balance, setBalance] = useState(10000);\n  const [showBalance, setShowBalance] = useState(true);\n  const [coinData, setCoinData] = useState([]);\n\n  const componentDidMount = async () => {\n    calculateBalance();\n\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins')\n    const coinIDs = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\n    const tickerURL = 'https://api.coinpaprika.com/v1/tickers/';\n    const promises = coinIDs.map(id => axios.get(tickerURL + id));\n    const coinData = await Promise.all(promises);\n    const coinPriceData = coinData.map( function(response) {\n      const coin = response.data;\n      return {\n        key: coin.id,\n        name: coin.name,\n        ticker: coin.symbol,\n        id: coin.id,\n        balance: 0,\n        price: coin.quotes.USD.price,\n      }\n    });\n    setCoinData( coinPriceData );\n  }\n\n  useEffect(() => {\n    if (coinData.length === 0 ) {\n      componentDidMount();\n    }\n  }); \n\n\n  const calculateBalance = () => {\n    let totalBalance = 0;\n    coinData.forEach(function( {price, balance}){\n      totalBalance = totalBalance + (balance * price);\n      return totalBalance;\n    })\n    setBalance(totalBalance);\n    console.log(\"Total balance is \",totalBalance);\n  }\n\n  const handleHide = () => {\n    setShowBalance(!showBalance);\n    console.log(showBalance);\n  }\n\n  const handleRefresh = async (valueChangeId) => {\n    const tickerURL = `https://api.coinpaprika.com/v1/tickers/${valueChangeId}`;\n    const response = await axios.get(tickerURL);\n    const newPrice = response.data.quotes.USD.price;\n    const newCoinData = coinData.map( function(coin) {\n      let newValues = {...coin}\n      if (valueChangeId === coin.id) {\n        console.log(\"Price of the\", coin.name, \"is\", newPrice);\n        newValues.price = newPrice;\n      }\n      return newValues;\n    });\n    setCoinData(newCoinData);\n  }\n\n  return (\n    <AppCss>\n      <ExchangeHeader />\n      <AccountBalance \n        amount={balance}\n        showBalance={showBalance}\n        handleHide={handleHide} />\n      <CoinList \n        calculateBalance={calculateBalance}\n        coinData={coinData} \n        \n        handleRefresh={handleRefresh} \n        handleHide={handleHide}\n        showBalance={showBalance}\n        />\n    </AppCss>\n  );\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}